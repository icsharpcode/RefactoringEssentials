<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="..\packages\Microsoft.DiaSymReader.Native.1.3.3\build\Microsoft.DiaSymReader.Native.props" Condition="Exists('..\packages\Microsoft.DiaSymReader.Native.1.3.3\build\Microsoft.DiaSymReader.Native.props')" />
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <MinimumVisualStudioVersion>11.0</MinimumVisualStudioVersion>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectTypeGuids>{786C830F-07A1-408B-BD7F-6EE04809D6DB};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <ProjectGuid>{C465A5DC-AD28-49A2-89C0-F81838814A7E}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>RefactoringEssentials</RootNamespace>
    <AssemblyName>RefactoringEssentials</AssemblyName>
    <TargetFrameworkProfile>Profile7</TargetFrameworkProfile>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <SolutionDir Condition="$(SolutionDir) == '' Or $(SolutionDir) == '*Undefined*'">..\</SolutionDir>
    <RestorePackages>true</RestorePackages>
    <NuGetPackageImportStamp>
    </NuGetPackageImportStamp>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>..\bin\Debug\</OutputPath>
    <DefineConstants>TRACE;DEBUG</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <AllowUnsafeBlocks>false</AllowUnsafeBlocks>
    <NoStdLib>true</NoStdLib>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>..\bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <NoStdLib>true</NoStdLib>
  </PropertyGroup>
  <PropertyGroup>
    <IncludeCopyLocalReferencesInVSIXContainer>false</IncludeCopyLocalReferencesInVSIXContainer>
  </PropertyGroup>
  <PropertyGroup>
    <SignAssembly>false</SignAssembly>
  </PropertyGroup>
  <PropertyGroup>
    <AssemblyOriginatorKeyFile>
    </AssemblyOriginatorKeyFile>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include="Common\CodeContractsCodeRefactoringProvider.cs" />
    <Compile Include="Common\NotPortedYetAttribute.cs" />
    <Compile Include="Common\RoslynReflectionUsageAttribute.cs" />
    <Compile Include="Converter\CodeConverter.cs" />
    <Compile Include="Converter\CodeWithOptions.cs" />
    <Compile Include="Converter\ConversionResult.cs" />
    <Compile Include="CSharp\CodeFixes\Custom\CS0132StaticConstructorParameterCodeFixProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Custom\AddNullCheckCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\ContractRequiresStringNotNullOrEmptyCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Custom\InitializeReadOnlyAutoPropertyFromConstructorParameterCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\ContractRequiresNotNullCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\ContractEnsuresNotNullReturnRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\MergeNestedIfAction.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\ConvertInstanceToStaticMethodCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\ConstructorParameterContext.cs" />
    <Compile Include="CSharp\ConstructorParameterContextFinder.cs" />
    <Compile Include="CSharp\Converter\MethodBodyVisitor.cs" />
    <Compile Include="CSharp\Converter\NodesVisitor.cs" />
    <Compile Include="CSharp\Converter\VisualBasicConverter.cs" />
    <Compile Include="CSharp\ConvertUnitTestToVB.cs" />
    <Compile Include="CSharp\Diagnostics\Custom\AvoidAsyncVoidAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Custom\RoslynUsageAnalyzer.cs" />
    <Compile Include="CSharp\Manipulations.cs" />
    <Compile Include="CSharp\SyntaxExtensions.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\AddAnotherAccessorCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\AddCatchExceptionCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\AddExceptionDescriptionCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\AddNameToArgumentCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\AddNewFormatItemCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\CheckIfParameterIsNullCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\ComputeConstantValueCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\ConvertAnonymousMethodToLambdaCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\ConvertCoalescingToConditionalExpressionCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\ConvertDecToHexCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\ConvertEqualityOperatorToEqualsCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\ConvertEqualityOperatorToReferenceEqualsCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\ConvertEqualsToEqualityOperatorCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\ConvertExplicitToImplicitImplementationCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\ConvertForeachToForCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\ConvertHexToDecCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\ConvertIfStatementToConditionalTernaryExpressionCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\ConvertIfStatementToSwitchStatementCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\ConvertImplicitToExplicitImplementationCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\ConvertLambdaBodyExpressionToStatementCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\ConvertLambdaStatementToExpressionCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\ConvertLambdaToAnonymousMethodCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\ConvertMethodGroupToAnonymousMethodCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\ConvertMethodGroupToLambdaCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\ConvertReferenceEqualsToEqualityOperatorCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\ConvertSwitchToIfCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\CopyCommentsFromBaseCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\CreateEventInvocatorCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\FlipEqualsTargetAndArgumentCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\FlipOperatorOperandsCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\FlipRelationalOperatorArgumentsCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\InsertAnonymousMethodSignatureCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\InvertConditionalOperatorCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\InvertIfCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\RemoveCatchExceptionCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\InvokeAsStaticMethodCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\JoinLocalVariableDeclarationAndAssignmentCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\JoinStringCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\NegateLogicalExpressionCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\RemoveRegionEndRegionDirectivesCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Custom\AddBracesCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Custom\RemoveBracesCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\ReplaceAutoPropertyWithPropertyAndBackingFieldCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\ConvertAutoPropertyToPropertyCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\ReplaceDirectCastWithSafeCastCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\ReplacePropertyWithBackingFieldWithAutoPropertyCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\ReplaceSafeCastWithDirectCastCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\ReplaceExplicitTypeWithVarCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\ReplaceVarWithExplicitTypeCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\SplitIfWithAndConditionInTwoCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\SplitIfWithOrConditionInTwoCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\SplitLocalVariableDeclarationAndAssignmentCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Custom\ConvertHasFlagsToBitwiseFlagComparisonCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Custom\ConvertBitwiseFlagComparisonToHasFlagsCodeRefactoringProvider.cs" />
    <Compile Include="Common\SpecializedCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\UseAsAndNullCheckCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\UseSystemStringEmptyCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\UseSystemEnvironmentNewLineCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Custom\ConvertForToWhileCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Custom\ConvertDoWhileToWhileLoopCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Custom\NegateIsExpressionCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Custom\InvertLogicalExpressionCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Custom\GenerateSwitchLabelsCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Custom\ReplacePostfixExpressionWithAssignmentCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Custom\ReplaceWithOperatorAssignmentCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Custom\ReplaceAssignmentWithPostfixExpressionCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Custom\ConvertShiftToMultiplyCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Custom\ReplaceOperatorAssignmentWithAssignmentCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Custom\ConvertMultiplyToShiftCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Custom\ExtractWhileConditionToInternalIfStatementCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Custom\ConvertWhileToDoWhileLoopCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\ToAbstractVirtualNonVirtualConversionCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Uncategorized\AutoLinqSumAction.cs" />
    <Compile Include="CSharp\CodeRefactorings\Uncategorized\ChangeAccessModifierAction.cs" />
    <Compile Include="CSharp\CodeRefactorings\Uncategorized\ConvertIfStatementToNullCoalescingExpressionAction.cs" />
    <Compile Include="CSharp\CodeRefactorings\Uncategorized\ConvertIfStatementToReturnStatementAction.cs" />
    <Compile Include="CSharp\CodeRefactorings\Uncategorized\CreateCustomEventImplementationAction.cs" />
    <Compile Include="CSharp\CodeRefactorings\Uncategorized\CreateDelegateAction.cs" />
    <Compile Include="CSharp\CodeRefactorings\Uncategorized\CreateIndexerAction.cs" />
    <Compile Include="CSharp\CodeRefactorings\Uncategorized\CreateOverloadWithoutParameterCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Uncategorized\ExtractAnonymousMethodCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Uncategorized\GenerateGetterAction.cs" />
    <Compile Include="CSharp\CodeRefactorings\Uncategorized\IntroduceConstantAction.cs" />
    <Compile Include="CSharp\CodeRefactorings\Uncategorized\IterateViaForeachAction.cs" />
    <Compile Include="CSharp\CodeRefactorings\Uncategorized\LinqFluentToQueryAction.cs" />
    <Compile Include="CSharp\CodeRefactorings\Uncategorized\LinqQueryToFluentAction.cs" />
    <Compile Include="CSharp\CodeRefactorings\Uncategorized\MoveToOuterScopeAction.cs" />
    <Compile Include="CSharp\CodeRefactorings\Uncategorized\PutInsideUsingAction.cs" />
    <Compile Include="CSharp\CodeRefactorings\Uncategorized\UseStringFormatAction.cs" />
    <Compile Include="CSharp\Diagnostics\CodeActionFactory.cs" />
    <Compile Include="CSharp\Diagnostics\DiagnosticFactory.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\PublicConstructorInAbstractClass.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\ReplaceWithOfTypeAny.cs" />
    <Compile Include="CSharp\Diagnostics\DiagnosticAnalyzerCategories.cs" />
    <Compile Include="CSharp\Diagnostics\DiagnosticAnalyzerMarker.cs" />
    <Compile Include="CSharp\Diagnostics\Custom\AdditionalOfTypeAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Custom\BaseMethodParameterNameMismatchAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Custom\CallToObjectEqualsViaBaseAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Custom\CheckNamespaceAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Custom\ConstantConditionAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Custom\ConvertIfToAndExpressionAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Custom\LockThisAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Custom\NegativeRelationalExpressionAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Custom\NotImplementedExceptionAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Custom\ParameterOnlyAssignedAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Custom\RedundantAssignmentAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Custom\RedundantInternalAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Custom\RedundantPrivateAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Custom\StaticEventSubscriptionAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Custom\VariableOnlyAssignedAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Custom\XmlDocAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\CodeQuality\BaseMethodCallWithDefaultParameterAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\CodeQuality\BitwiseOperatorOnEnumWithoutFlagsAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\CodeQuality\CompareNonConstrainedGenericWithNullAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\CodeQuality\CompareOfFloatsByEqualityOperatorAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\CodeQuality\ConditionalTernaryEqualBranchAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\CodeQuality\DelegateSubtractionAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\CodeQuality\DoNotCallOverridableMethodsInConstructorAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\CodeQuality\EmptyGeneralCatchClauseAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\CodeQuality\EqualExpressionComparisonAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\CodeQuality\EventUnsubscriptionViaAnonymousDelegateAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\CodeQuality\ForControlVariableIsNeverModifiedAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\CodeQuality\FormatStringProblemAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\CodeQuality\FunctionNeverReturnsAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\CodeQuality\LocalVariableHidesMemberAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\CodeQuality\LongLiteralEndingLowerLAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\CodeQuality\MemberHidesStaticFromOuterClassAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\CodeQuality\MethodOverloadWithOptionalParameterAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\CodeQuality\NonReadonlyReferencedInGetHashCodeAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\CodeQuality\NotResolvedInTextAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\CodeQuality\ObjectCreationAsStatementAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\CodeQuality\OperatorIsCanBeUsedAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\CodeQuality\OptionalParameterHierarchyMismatchAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\CodeQuality\OptionalParameterRefOutAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\CodeQuality\ParameterHidesMemberAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\CodeQuality\PartialMethodParameterNameMismatchAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\CodeQuality\PolymorphicFieldLikeEventInvocationAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\CodeQuality\PossibleAssignmentToReadonlyFieldAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\CodeQuality\PossibleMultipleEnumerationAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\CodeQuality\ThreadStaticAtInstanceFieldAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\CodeQuality\ValueParameterNotUsedAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\CompilerWarnings\CS1573ParameterHasNoMatchingParamTagAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\ConstraintViolations\InconsistentNaming\NamingConventionService.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\ConstraintViolations\InconsistentNaming\NamingRule.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\ConstraintViolations\InconsistentNaming\NamingStyle.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\ConstraintViolations\InconsistentNaming\AffectedEntity.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\ConstraintViolations\InconsistentNaming\DefaultRules.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\ConstraintViolations\InconsistentNaming\Modifiers.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\ConstraintViolations\InconsistentNaming\InconsistentNamingAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\NUnit\NonPublicMethodWithTestAttributeAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\Opportunities\ConvertClosureToMethodGroupAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\Opportunities\ConvertConditionalTernaryToNullCoalescingAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\Opportunities\ConvertIfStatementToNullCoalescingExpressionAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\Opportunities\ConvertIfStatementToSwitchStatementAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\Opportunities\ConvertNullableToShortFormAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\Opportunities\ConvertToAutoPropertyAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\Opportunities\ConvertToLambdaExpressionAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\Opportunities\ConvertToStaticTypeAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\Opportunities\ForCanBeConvertedToForeachAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\Opportunities\InvokeAsExtensionMethodAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\Opportunities\SuggestUseVarKeywordEvidentAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInDeclaration\EmptyConstructorAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInDeclaration\EmptyDestructorAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInDeclaration\EmptyNamespaceAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInDeclaration\EnumUnderlyingTypeIsIntAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInDeclaration\PartialTypeWithSinglePartAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInDeclaration\RedundantBaseConstructorCallAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInDeclaration\RedundantDefaultFieldInitializerAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInDeclaration\RedundantOverriddenMemberAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInDeclaration\SealedMemberInSealedClassAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInDeclaration\UnusedParameterAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInDeclaration\UnusedTypeParameterAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\ArrayCreationCanBeReplacedWithArrayInitializerAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\ConditionIsAlwaysTrueOrFalseAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\ConstantNullCoalescingConditionAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\DoubleNegationOperatorAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\EmptyStatementAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\ForStatementConditionIsTrueAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\RedundantAnonymousTypePropertyNameAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\RedundantArgumentDefaultValueAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\RedundantArgumentNameAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\RedundantAttributeParenthesesAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\RedundantBaseQualifierAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\RedundantBoolCompareAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\RedundantCaseLabelAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\RedundantCatchClauseAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\RedundantCheckBeforeAssignmentAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\RedundantCommaInArrayInitializerAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\RedundantComparisonWithNullAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\RedundantDelegateCreationAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\RedundantEmptyDefaultSwitchBranchAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\RedundantEmptyFinallyBlockAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\RedundantEnumerableCastCallAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\RedundantExplicitArrayCreationAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\RedundantExplicitArraySizeAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\RedundantExplicitNullableCreationAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\RedundantExtendsListEntryAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\RedundantIfElseBlockAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\RedundantLambdaParameterTypeAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\RedundantLambdaSignatureParenthesesAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\RedundantLogicalConditionalExpressionOperandAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\RedundantObjectCreationArgumentListAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\RedundantObjectOrCollectionInitializerAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\RedundantStringToCharArrayCallAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\RedundantTernaryExpressionAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\RedundantToStringCallAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\RedundantUnsafeContextAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\RemoveRedundantOrStatementAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\UnusedAnonymousMethodSignatureAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\UseMethodIsInstanceOfTypeAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\UseMethodAnyAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\UseIsOperatorAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\UseArrayCreationExpressionAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\StringStartsWithIsCultureSpecificAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\StringLastIndexOfIsCultureSpecificAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\StringIndexOfIsCultureSpecificAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\StringEndsWithIsCultureSpecificAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\StringCompareToIsCultureSpecificAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\StringCompareIsCultureSpecificAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\SimplifyLinqExpressionAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\SimplifyConditionalTernaryExpressionAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\ReplaceWithStringIsNullOrEmptyAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\ReplaceWithSingleCallToSingleOrDefaultAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\ReplaceWithSingleCallToSingleAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\ReplaceWithSingleCallToLongCountAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\ReplaceWithSingleCallToLastOrDefaultAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\ReplaceWithSingleCallToLastAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\ReplaceWithSingleCallToFirstOrDefaultAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\ReplaceWithSingleCallToFirstAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\ReplaceWithSingleCallToCountAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\ReplaceWithSingleCallToAnyAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\ReplaceWithSimpleAssignmentAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\ReplaceWithOfTypeWhereAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\ReplaceWithOfTypeSingleOrDefaultAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\ReplaceWithOfTypeSingleAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\ReplaceWithOfTypeLongCountAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\ReplaceWithOfTypeLastOrDefaultAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\ReplaceWithOfTypeLastAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\ReplaceWithOfTypeAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\ReplaceWithOfTypeFirstOrDefaultAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\ReplaceWithOfTypeFirstAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\ReplaceWithOfTypeCountAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\ReplaceWithLastOrDefaultAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\ReplaceWithFirstOrDefaultAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\ReferenceEqualsWithValueTypeAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\PossibleMistakenCallToGetTypeAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\ParameterCanBeDeclaredWithBaseTypeAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\MemberCanBeMadeStaticAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\FieldCanBeMadeReadOnlyAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\EmptyEmbeddedStatementAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\ConvertToConstantAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\ConvertIfToOrExpressionAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\ConvertIfDoToWhileAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\BaseMemberHasParamsAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\AccessToStaticMemberViaDerivedTypeAnalyzer.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\ConvertStatementBodyToExpressionBodyCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\ConvertExpressionBodyToStatementBodyCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\CheckArrayIndexValueCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\CheckCollectionIndexValueCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\CheckStringIndexValueCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\CheckStringBuilderIndexValueCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\CheckDictionaryKeyValueCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Custom\CreateChangedEventCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Custom\AddOptionalParameterToInvocationCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\SplitStringCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Custom\ReverseDirectionForForLoopCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\Diagnostics\CSharpDiagnosticIDs.cs" />
    <Compile Include="CSharp\Diagnostics\DiagnosticCustomTags.cs" />
    <Compile Include="CSharp\CodeFixes\Custom\CS1105ExtensionMethodMustBeDeclaredStaticCodeFixProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\InitializeFieldFromConstructorParameterCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\InitializeAutoPropertyFromConstructorParameterCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\ConvertTernaryExpressionToIfStatementCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeFixes\Custom\CS1520MethodMustHaveAReturnTypeCodeFixProvider.cs" />
    <Compile Include="CSharp\CodeFixes\Custom\CS0108UseNewKeywordIfHidingIntendedCodeFixProvider.cs" />
    <Compile Include="CSharp\CodeFixes\Custom\CS0759RedundantPartialMethodCodeFixProvider.cs" />
    <Compile Include="CSharp\CodeFixes\Custom\ReturnMustNotBeFollowedByAnyExpressionCodeFixProvider.cs" />
    <Compile Include="CSharp\CodeFixes\Custom\CS0152DuplicateCaseLabelValueCodeFixProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\SplitDeclarationListCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeFixes\Custom\InvalidConversionCodeFixProvider.cs" />
    <Compile Include="CSharp\CodeFixes\Custom\CS0164LabelHasNotBeenReferencedCodeFixProvider.cs" />
    <Compile Include="CSharp\CodeFixes\Custom\CS0162UnreachableCodeDetectedCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInDeclaration\EmptyConstructorCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInDeclaration\EmptyDestructorCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\Opportunities\ConvertClosureToMethodGroupCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInDeclaration\EmptyNamespaceCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInDeclaration\EnumUnderlyingTypeIsIntCodeFixProvider.cs" />
    <Compile Include="CSharp\CodeFixes\Custom\CS0168LocalVariableNotUsedCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInDeclaration\PartialTypeWithSinglePartCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInDeclaration\RedundantBaseConstructorCallCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInDeclaration\RedundantDefaultFieldInitializerCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInDeclaration\RedundantOverriddenMemberCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInDeclaration\SealedMemberInSealedClassCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInDeclaration\UnusedParameterCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\NUnit\NonPublicMethodWithTestAttributeCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\Opportunities\ConvertConditionalTernaryToNullCoalescingCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\Opportunities\ConvertIfStatementToNullCoalescingExpressionCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\Opportunities\ConvertIfStatementToSwitchStatementCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\Opportunities\ConvertNullableToShortFormCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\Opportunities\ConvertToAutoPropertyCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\Opportunities\ConvertToLambdaExpressionCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\Opportunities\ConvertToStaticTypeCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\Opportunities\ForCanBeConvertedToForeachCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\Opportunities\InvokeAsExtensionMethodCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\Opportunities\SuggestUseVarKeywordEvidentCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\CodeQuality\CompareNonConstrainedGenericWithNullCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\CodeQuality\CompareOfFloatsByEqualityOperatorCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\CodeQuality\ConditionalTernaryEqualBranchCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\CodeQuality\EqualExpressionComparisonCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\CodeQuality\LongLiteralEndingLowerLCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\CodeQuality\NotResolvedInTextIssueCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\CodeQuality\OperatorIsCanBeUsedIssueCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\CodeQuality\OptionalParameterHierarchyMismatchCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\CodeQuality\PartialMethodParameterNameMismatchCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\CodeQuality\PossibleAssignmentToReadonlyFieldCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\CodeQuality\PossibleMultipleEnumerationCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\CodeQuality\ThreadStaticAtInstanceFieldCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\AccessToStaticMemberViaDerivedTypeCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\BaseMemberHasParamsCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\ConvertIfDoToWhileCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\ConvertIfToOrExpressionCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\ConvertToConstantCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\EmptyEmbeddedStatementCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\FieldCanBeMadeReadOnlyCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\MemberCanBeMadeStaticCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\ParameterCanBeDeclaredWithBaseTypeCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\PossibleMistakenCallToGetTypeCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\PublicConstructorInAbstractClassCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\ReferenceEqualsWithValueTypeCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\ReplaceWithFirstOrDefaultCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\ReplaceWithLastOrDefaultCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\ReplaceWithOfTypeCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\ReplaceWithOfTypeAnyCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\ReplaceWithOfTypeCountCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\ReplaceWithOfTypeFirstCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\ReplaceWithOfTypeFirstOrDefaultCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\ReplaceWithOfTypeLastCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\ReplaceWithOfTypeLastOrDefaultCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\ReplaceWithOfTypeLongCountCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\ReplaceWithOfTypeSingleCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\ReplaceWithOfTypeSingleOrDefaultCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\ReplaceWithOfTypeWhereCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\ReplaceWithSimpleAssignmentCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\ReplaceWithSingleCallToAnyCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\ReplaceWithSingleCallToCountFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\ReplaceWithSingleCallToFirstCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\ReplaceWithSingleCallToFirstOrDefaultCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\ReplaceWithSingleCallToLastCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\ReplaceWithSingleCallToLastOrDefaultCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\ReplaceWithSingleCallToLongCountCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\ReplaceWithSingleCallToSingleCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\ReplaceWithSingleCallToSingleOrDefaultFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\ReplaceWithStringIsNullOrEmptyCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\SimplifyConditionalTernaryExpressionCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\SimplifyLinqExpressionCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\StringCompareIsCultureSpecificCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\StringCompareToIsCultureSpecificCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\StringMethodIsCultureSpecificCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\UseArrayCreationExpressionCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\UseIsOperatorCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\UseMethodAnyCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\PracticesAndImprovements\UseMethodIsInstanceOfTypeCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\ArrayCreationCanBeReplacedWithArrayInitializerCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\ConditionIsAlwaysTrueOrFalseCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\ConstantNullCoalescingConditionCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\DoubleNegationOperatorCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\EmptyStatementCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\ForStatementConditionIsTrueCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\RedundantAnonymousTypePropertyNameCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\RedundantArgumentDefaultValueCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\RedundantArgumentNameCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\RedundantAttributeParenthesesCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\RedundantBaseQualifierCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\RedundantBoolCompareCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\RedundantCaseLabelCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\RedundantCatchClauseCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\RedundantCheckBeforeAssignmentCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\RedundantCommaInArrayInitializerCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\RedundantComparisonWithNullCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\RedundantDelegateCreationCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\RedundantEmptyDefaultSwitchBranchCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\RedundantEmptyFinallyBlockCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\RedundantEnumerableCastCallCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\RedundantExplicitArrayCreationCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\RedundantExplicitArraySizeCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\RedundantExplicitNullableCreationCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\RedundantExtendsListEntryCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\RedundantIfElseBlockCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\RedundantLambdaParameterTypeCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\RedundantLambdaSignatureParenthesesCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\RedundantLogicalConditionalExpressionOperandCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\RedundantObjectCreationArgumentListCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\RedundantObjectOrCollectionInitializerCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\RedundantStringToCharArrayCallCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\RedundantTernaryExpressionCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\RedundantToStringCallCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\RedundantUnsafeContextCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\RemoveRedundantOrStatementCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\RedundanciesInCode\UnusedAnonymousMethodSignatureCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Custom\AdditionalOfTypeCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Custom\BaseMethodParameterNameMismatchCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Custom\CallToObjectEqualsViaBaseCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Custom\ConstantConditionCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Custom\ConvertIfToAndExpressionCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Custom\LockThisCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Custom\NegativeRelationalExpressionCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Custom\ParameterOnlyAssignedCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Custom\RedundantAssignmentCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Custom\RedundantInternalCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Custom\RedundantPrivateCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\Custom\NameOfSuggestionAnalyzer.cs" />
    <Compile Include="CSharp\Diagnostics\Custom\NameOfSuggestionCodeFixProvider.cs" />
    <Compile Include="CSharp\Diagnostics\DocumentChangeAction.cs" />
    <Compile Include="CSharp\Diagnostics\NRefactoryCodeAction.cs" />
    <Compile Include="CSharp\Diagnostics\InsertionAction.cs" />
    <Compile Include="CSharp\Diagnostics\InsertionResult.cs" />
    <Compile Include="Properties\AssemblyInfoBase.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>AssemblyInfoBase.tt</DependentUpon>
    </Compile>
    <Compile Include="Samples\CSharp\SampleAnalyzer.cs" />
    <Compile Include="Samples\CSharp\SampleCodeFixProvider.cs" />
    <Compile Include="Samples\CSharp\SampleCodeRefactoringProvider.cs" />
    <Compile Include="Util\ClassDeclarationSyntaxExtensions.cs" />
    <Compile Include="Util\GettextCatalog.cs" />
    <Compile Include="CSharp\CodeRefactorings\Custom\ConvertInterpolatedStringToStringFormatCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Custom\ConvertStringFormatToInterpolatedStringCodeRefactoringProvider.cs" />
    <Compile Include="CSharp\CodeRefactorings\Synced\ImportStaticClassWithUsingCodeRefactoringProvider.cs" />
    <Compile Include="Util\GeneratedCodeRecognition.cs" />
    <Compile Include="Util\HelpLink.cs" />
    <Compile Include="Util\NRefactory6Host.cs" />
    <Compile Include="Util\ReflectionNamespaces.cs" />
    <Compile Include="Util\RoslynReflection.cs" />
    <Compile Include="Util\SyntaxExtensions.cs" />
    <Compile Include="Util\TypeExtensions.cs" />
    <Compile Include="Util\CSharpUtil.cs" />
    <Compile Include="Util\SymbolExtensions.cs" />
    <Compile Include="Util\SignatureComparer.cs" />
    <Compile Include="Util\CaseCorrector.cs" />
    <Compile Include="Util\UnicodeNewline.cs" />
    <Compile Include="Util\ReflectionCompatibilityExtensions.cs" />
    <Compile Include="Util\FindTokenHelper.cs" />
    <Compile Include="Util\RefactoringHelpers.cs" />
    <Compile Include="Util\SpeculationAnalyzer.cs" />
    <Compile Include="Util\CodeFixContextExtensions.cs" />
    <Compile Include="Util\SyntaxTokenExtensions.cs" />
    <Compile Include="Util\VBSyntaxExtensions.cs" />
    <Compile Include="Util\VBUtil.cs" />
    <Compile Include="Util\WordParser.cs" />
    <Compile Include="Util\SyntaxNodeExtensions.cs" />
    <Compile Include="Util\Matcher.cs" />
    <Compile Include="Util\ValueTuple.cs" />
    <Compile Include="Util\ValueTuple`2.cs" />
    <Compile Include="Util\ITypeParameterSymbolExtensions.cs" />
    <Compile Include="Util\StringPclExtensions.cs" />
    <Compile Include="Util\ObjectExtensions.cs" />
    <Compile Include="Util\AnnotationTable.cs" />
    <Compile Include="Util\EnumerableExtensions.cs" />
    <Compile Include="Util\ISymbolExtensions.cs" />
    <Compile Include="Util\SpecializedCollections.cs" />
    <Compile Include="Util\TypeGuessing.cs" />
    <Compile Include="Util\CSharpSyntaxContext.cs" />
    <Compile Include="Util\CompilationUnitSyntaxExtensions.cs" />
    <Compile Include="Util\ExpressionSyntaxExtensions.cs" />
    <Compile Include="Util\IAssemblySymbolExtensions.cs" />
    <Compile Include="Util\ITypeSymbolExtensions.cs" />
    <Compile Include="Util\TypeGenerator.cs" />
    <Compile Include="Util\UsingsAndExternAliasesDirectiveComparer.cs" />
    <Compile Include="Util\SyntaxTriviaExtensions.cs" />
    <Compile Include="Util\SyntaxTriviaListExtensions.cs" />
    <Compile Include="Util\StringExtensions.cs" />
    <Compile Include="Util\CompilationExtensions.cs" />
    <Compile Include="Util\CommonAccessibilityUtilities.cs" />
    <Compile Include="Util\INamespaceOrTypeSymbolExtensions.cs" />
    <Compile Include="Util\NameSyntaxComparer.cs" />
    <Compile Include="Util\TypeSyntaxComparer.cs" />
    <Compile Include="Util\TokenComparer.cs" />
    <Compile Include="Util\NamespaceDeclarationSyntaxExtensions.cs" />
    <Compile Include="VB\CodeRefactorings\AddAnotherAccessorCodeRefactoringProvider.cs" />
    <Compile Include="VB\CodeRefactorings\AddCheckForNothingCodeRefactoringProvider.cs" />
    <Compile Include="VB\CodeRefactorings\CheckIfParameterIsNothingCodeRefactoringProvider.cs" />
    <Compile Include="VB\CodeRefactorings\ComputeConstantValueCodeRefactoringProvider.cs" />
    <Compile Include="VB\CodeRefactorings\ConvertDecToHexCodeRefactoringProvider.cs" />
    <Compile Include="VB\CodeRefactorings\ConvertHexToDecCodeRefactoringProvider.cs" />
    <Compile Include="VB\CodeRefactorings\ConvertIfStatementToSelectCaseStatementCodeRefactoringProvider.cs" />
    <Compile Include="VB\CodeRefactorings\ConvertSelectCaseToIfCodeRefactoringProvider.cs" />
    <Compile Include="VB\CodeRefactorings\ConvertToCustomEventCodeRefactoringProvider.cs" />
    <Compile Include="VB\CodeRefactorings\CheckDictionaryKeyValueCodeRefactoringProvider.cs" />
    <Compile Include="VB\CodeRefactorings\ConvertDoWhileLoopToDoLoopWhileCodeRefactoringProvider.cs" />
    <Compile Include="VB\CodeRefactorings\ConvertDoLoopWhileToDoWhileLoopCodeRefactoringProvider.cs" />
    <Compile Include="VB\CodeRefactorings\CopyCommentsFromBaseCodeRefactoringProvider.cs" />
    <Compile Include="VB\CodeRefactorings\CreateChangedEventCodeRefactoringProvider.cs" />
    <Compile Include="VB\CodeRefactorings\CreateOverloadWithoutParameterCodeRefactoringProvider.cs" />
    <Compile Include="VB\CodeRefactorings\InvertIfCodeRefactoringProvider.cs" />
    <Compile Include="VB\CodeRefactorings\InvertLogicalExpressionCodeRefactoringProvider.cs" />
    <Compile Include="VB\CodeRefactorings\ReplaceDirectCastWithSafeCastCodeRefactoringProvider.cs" />
    <Compile Include="VB\CodeRefactorings\ReplaceSafeCastWithDirectCastCodeRefactoringProvider.cs" />
    <Compile Include="VB\Converter\ConversionExtensions.cs" />
    <Compile Include="VB\Converter\CSharpConverter.cs" />
    <Compile Include="VB\Converter\MethodBodyVisitor.cs" />
    <Compile Include="VB\Converter\NodesVisitor.cs" />
    <Compile Include="VB\Diagnostics\Custom\NameOfSuggestionAnalyzer.cs" />
    <Compile Include="VB\Diagnostics\Custom\NameOfSuggestionCodeFixProvider.cs" />
    <Compile Include="VB\Diagnostics\VBDiagnosticIDs.cs" />
    <Compile Include="VB\Diagnostics\Synced\NUnit\NonPublicMethodWithTestAttributeAnalyzer.cs" />
    <Compile Include="VB\Diagnostics\Synced\NUnit\NonPublicMethodWithTestAttributeCodeFixProvider.cs" />
    <Compile Include="Util\NameGenerator.cs" />
    <Compile Include="Util\NameProposalService.cs" />
    <Compile Include="Util\Flow\FlowState.cs" />
    <Compile Include="Util\Flow\FlowAnalysis.cs" />
    <Compile Include="Util\Flow\FlowLocation.cs" />
    <Compile Include="Util\Flow\FlowAnalyzer.cs" />
    <Compile Include="Util\Flow\NullFlowState.cs" />
    <Compile Include="Xml\TokenReader.cs" />
    <Compile Include="Xml\TextType.cs" />
    <Compile Include="Xml\TagReader.cs" />
    <Compile Include="Xml\TagMatchingHeuristics.cs" />
    <Compile Include="Xml\SyntaxError.cs" />
    <Compile Include="Xml\ReuseEqualityComparer.cs" />
    <Compile Include="Xml\ObjectIterator.cs" />
    <Compile Include="Xml\Log.cs" />
    <Compile Include="Xml\InternalDocument.cs" />
    <Compile Include="Xml\IncrementalParserState.cs" />
    <Compile Include="Xml\DocumentationElement.cs" />
    <Compile Include="Xml\AXmlVisitor.cs" />
    <Compile Include="Xml\AXmlText.cs" />
    <Compile Include="Xml\AXmlTag.cs" />
    <Compile Include="Xml\AXmlReader.cs" />
    <Compile Include="Xml\AXmlParser.cs" />
    <Compile Include="Xml\AXmlObject.cs" />
    <Compile Include="Xml\AXmlElement.cs" />
    <Compile Include="Xml\AXmlDocument.cs" />
    <Compile Include="Xml\AXmlAttribute.cs" />
    <Compile Include="Xml\LazyInit.cs" />
    <Compile Include="Xml\TreeTraversal.cs" />
    <Compile Include="Util\Analysis\ControlFlow.cs" />
    <Compile Include="Util\Analysis\ReachabilityAnalysis.cs" />
    <Compile Include="Util\FormatStringHelper.cs" />
    <Compile Include="Util\CompositieFormatStringParser\TextSegment.cs" />
    <Compile Include="Util\CompositieFormatStringParser\IFormatStringSegment.cs" />
    <Compile Include="Util\CompositieFormatStringParser\IFormatStringError.cs" />
    <Compile Include="Util\CompositieFormatStringParser\FormatStringSegmentBase.cs" />
    <Compile Include="Util\CompositieFormatStringParser\FormatItem.cs" />
    <Compile Include="Util\CompositieFormatStringParser\CompositeFormatStringParser.cs" />
    <Compile Include="CSharp\Diagnostics\Synced\CodeQuality\StaticFieldOrAutoPropertyInGenericTypeAnalyzer.cs" />
  </ItemGroup>
  <ItemGroup>
    <Reference Include="Microsoft.CodeAnalysis, Version=1.2.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL">
      <HintPath>..\packages\Microsoft.CodeAnalysis.Common.1.2.1\lib\portable-net45+win8\Microsoft.CodeAnalysis.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="Microsoft.CodeAnalysis.CSharp, Version=1.2.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL">
      <HintPath>..\packages\Microsoft.CodeAnalysis.CSharp.1.2.1\lib\portable-net45+win8\Microsoft.CodeAnalysis.CSharp.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="Microsoft.CodeAnalysis.CSharp.Workspaces, Version=1.2.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL">
      <HintPath>..\packages\Microsoft.CodeAnalysis.CSharp.Workspaces.1.2.1\lib\portable-net45+win8\Microsoft.CodeAnalysis.CSharp.Workspaces.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="Microsoft.CodeAnalysis.VisualBasic, Version=1.2.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL">
      <HintPath>..\packages\Microsoft.CodeAnalysis.VisualBasic.1.2.1\lib\portable-net45+win8\Microsoft.CodeAnalysis.VisualBasic.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="Microsoft.CodeAnalysis.VisualBasic.Workspaces, Version=1.2.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL">
      <HintPath>..\packages\Microsoft.CodeAnalysis.VisualBasic.Workspaces.1.2.1\lib\portable-net45+win8\Microsoft.CodeAnalysis.VisualBasic.Workspaces.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="Microsoft.CodeAnalysis.Workspaces, Version=1.2.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL">
      <HintPath>..\packages\Microsoft.CodeAnalysis.Workspaces.Common.1.2.1\lib\portable-net45+win8\Microsoft.CodeAnalysis.Workspaces.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="System.Collections.Immutable, Version=1.1.37.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <HintPath>..\packages\System.Collections.Immutable.1.1.37\lib\portable-net45+win8+wp8+wpa81\System.Collections.Immutable.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="System.Composition.AttributedModel">
      <HintPath>..\packages\Microsoft.Composition.1.0.27\lib\portable-net45+win8+wp8+wpa81\System.Composition.AttributedModel.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="System.Composition.Convention">
      <HintPath>..\packages\Microsoft.Composition.1.0.27\lib\portable-net45+win8+wp8+wpa81\System.Composition.Convention.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="System.Composition.Hosting">
      <HintPath>..\packages\Microsoft.Composition.1.0.27\lib\portable-net45+win8+wp8+wpa81\System.Composition.Hosting.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="System.Composition.Runtime">
      <HintPath>..\packages\Microsoft.Composition.1.0.27\lib\portable-net45+win8+wp8+wpa81\System.Composition.Runtime.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="System.Composition.TypedParts">
      <HintPath>..\packages\Microsoft.Composition.1.0.27\lib\portable-net45+win8+wp8+wpa81\System.Composition.TypedParts.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="System.Reflection.Metadata, Version=1.2.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <HintPath>..\packages\System.Reflection.Metadata.1.2.0\lib\portable-net45+win8\System.Reflection.Metadata.dll</HintPath>
      <Private>True</Private>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <Content Include="Properties\AssemblyInfoBase.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>AssemblyInfoBase.cs</LastGenOutput>
    </Content>
    <Content Include="CodeFixes.html.template" />
    <Content Include="RefactoringEssentials.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>RefactoringEssentials.nuspec</LastGenOutput>
      <SubType>Designer</SubType>
    </Content>
    <None Include="buildlibrarypackage.cmd">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <Content Include="RefactoringEssentials.Library.tt">
      <SubType>Designer</SubType>
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>RefactoringEssentials.Library.nuspec</LastGenOutput>
    </Content>
    <None Include="buildpackages_appveyor.cmd">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="RefactoringEssentials.Library.nuspec">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>RefactoringEssentials.Library.tt</DependentUpon>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="RefactoringEssentials.nuspec">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>RefactoringEssentials.tt</DependentUpon>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="Util\Reflection.md" />
    <None Include="Versioning.t4.template">
      <LastGenOutput>Versioning.cs.cs</LastGenOutput>
    </None>
    <None Include="buildpackage.cmd">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="packages.config" />
    <None Include="RefactoringEssentials.version" />
    <None Include="tools\install.ps1">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="tools\uninstall.ps1">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="Xml\ICSharpCode.NRefactory.Xml.csproj" />
  </ItemGroup>
  <ItemGroup>
    <None Include="missing.md" />
  </ItemGroup>
  <ItemGroup>
    <Folder Include="CSharp\Diagnostics\CompilerWarnings\" />
    <Folder Include="CSharp\Diagnostics\Synced\ConstraintViolations\InconsistentNamingIssue\" />
    <Folder Include="Samples\VB\" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="CodeRefactorings.html.template" />
    <None Include="CodeAnalyzers.html.template" />
  </ItemGroup>
  <ItemGroup>
    <Service Include="{508349B6-6B84-4DF5-91F0-309BEEBAD82D}" />
  </ItemGroup>
  <ItemGroup>
    <Analyzer Include="..\packages\Microsoft.CodeAnalysis.Analyzers.1.1.0\analyzers\dotnet\cs\Microsoft.CodeAnalysis.Analyzers.dll" />
    <Analyzer Include="..\packages\Microsoft.CodeAnalysis.Analyzers.1.1.0\analyzers\dotnet\cs\Microsoft.CodeAnalysis.CSharp.Analyzers.dll" />
  </ItemGroup>
  <ProjectExtensions>
    <MonoDevelop>
      <Properties>
        <Policies>
          <TextStylePolicy inheritsSet="VisualStudio" inheritsScope="text/plain" scope="text/x-csharp" />
          <CSharpFormattingPolicy IndentSwitchSection="True" NewLinesForBracesInProperties="True" NewLinesForBracesInAnonymousMethods="True" NewLinesForBracesInControlBlocks="True" NewLinesForBracesInAnonymousTypes="True" NewLinesForBracesInObjectCollectionArrayInitializers="True" NewLinesForBracesInLambdaExpressionBody="True" NewLineForElse="True" NewLineForCatch="True" NewLineForFinally="True" NewLineForMembersInObjectInit="True" NewLineForMembersInAnonymousTypes="True" NewLineForClausesInQuery="True" SpacingAfterMethodDeclarationName="False" SpaceAfterMethodCallName="False" SpaceBeforeOpenSquareBracket="False" inheritsSet="Mono" inheritsScope="text/x-csharp" scope="text/x-csharp" />
        </Policies>
      </Properties>
    </MonoDevelop>
  </ProjectExtensions>
  <Import Project="$(MSBuildExtensionsPath32)\Microsoft\Portable\$(TargetFrameworkVersion)\Microsoft.Portable.CSharp.targets" />
  <Import Project="$(VSToolsPath)\VSSDK\Microsoft.VsSDK.targets" Condition="'$(VSToolsPath)' != ''" />
  <PropertyGroup>
    <PostBuildEvent>
    </PostBuildEvent>
  </PropertyGroup>
  <Import Project="$(SolutionDir)\.nuget\NuGet.targets" Condition="Exists('$(SolutionDir)\.nuget\NuGet.targets')" />
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('$(SolutionDir)\.nuget\NuGet.targets')" Text="$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\.nuget\NuGet.targets'))" />
    <Error Condition="!Exists('..\packages\Microsoft.DiaSymReader.Native.1.3.3\build\Microsoft.DiaSymReader.Native.props')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\Microsoft.DiaSymReader.Native.1.3.3\build\Microsoft.DiaSymReader.Native.props'))" />
  </Target>
  <Target Name="RestorePackages" AfterTargets="EnsureNuGetPackageBuildImports">
    <PropertyGroup>
      <NuGet>$(SolutionDir)\.nuget\NuGet.exe</NuGet>
      <NuGet Condition="$(OS)=='Unix'">mono $(NuGet)</NuGet>
    </PropertyGroup>
    <Exec Condition="$(SolutionDir) != $([System.IO.Path]::GetFullPath('..')) And '$(Configuration)' != 'Mono_Debug' And '$(Configuration)' != 'Mono_Release'" Command="$(NuGet) restore -SolutionDirectory .." />
  </Target>
  <PropertyGroup>
  </PropertyGroup>
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Mono_Debug|AnyCPU' ">
    <Optimize>false</Optimize>
    <OutputPath>..\..\..\build\bin</OutputPath>
    <WarningLevel>4</WarningLevel>
    <NoStdLib>true</NoStdLib>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Mono_Release|AnyCPU' ">
    <Optimize>false</Optimize>
    <OutputPath>..\..\..\build\bin</OutputPath>
    <WarningLevel>4</WarningLevel>
    <NoStdLib>true</NoStdLib>
  </PropertyGroup>
</Project>